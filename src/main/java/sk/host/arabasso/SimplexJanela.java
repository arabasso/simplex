package sk.host.arabasso;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import sk.host.arabasso.printer.SimplexHtmlPrinter;
import sk.host.arabasso.printer.SimplexPrinter;
import sk.host.arabasso.printer.SimplexTextPrinter;

import javax.swing.*;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.Arrays;

/**
 * Created by arabasso on 29/10/2016.
 */
public class SimplexJanela extends JFrame {
    private JTextField foTextField;
    private JTextArea restricoesTextArea;
    private JButton resolverButton;
    private JTextArea variaveisBasicastextArea;
    private JTextArea variaveisNaoBasicastextArea;
    private JTextArea valorZTextArea;
    private JPanel simplexPanel;
    private JEditorPane passoEditorPane;
    private final Document passoDocument;
    private SimplexPrinter printer;

    public SimplexJanela(String title) throws HeadlessException {
        super(title);

        setMinimumSize(new Dimension(900, 700));
        setLocationRelativeTo(null);
        getContentPane().add(simplexPanel);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        resolverButton.addActionListener(this::resolverButtonClick);

        HTMLEditorKit kit = new HTMLEditorKit();

        passoEditorPane.setEditorKit(kit);

        StyleSheet styleSheet = kit.getStyleSheet();

        styleSheet.addRule("table {  width: 100%; }");
        styleSheet.addRule("table tr th { border: 1px solid #000; background: #999999; }");
        styleSheet.addRule("table tr td, table tr th { border: 1px solid #000000; }");

        passoDocument = kit.createDefaultDocument();

        passoEditorPane.setDocument(passoDocument);

        printer = new SimplexHtmlPrinter();
    }

    private void resolverButtonClick(ActionEvent e) {
        try {
            String fo = foTextField.getText();
            String restricoes = restricoesTextArea.getText();

            SimplexConstrutor construtor = new SimplexConstrutor();

            Simplex simplex = construtor.construir(fo, Arrays.asList(restricoes.split("\n")));

            SimplexSolucao solucao = simplex.solucao();

            StringBuilder sb = new StringBuilder();

            sb.append(printer.tudo(simplex, solucao));

            while (!solucao.otima) {
                simplex = simplex.proximoAlgoritmo();

                solucao = simplex.solucao();

                sb.append(printer.tudo(simplex, solucao));
            }

            passoEditorPane.setText(sb.toString());

            SimplexTextPrinter textPrinter = new SimplexTextPrinter();

            variaveisBasicastextArea.setText(textPrinter.variaveisBasicas(simplex, solucao));
            variaveisNaoBasicastextArea.setText(textPrinter.variaveisNaoBasicas(simplex, solucao));
            valorZTextArea.setText(textPrinter.valorZ(simplex, solucao));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Exceção", JOptionPane.ERROR_MESSAGE);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        simplexPanel = new JPanel();
        simplexPanel.setLayout(new GridLayoutManager(6, 3, new Insets(10, 10, 10, 10), -1, -1));
        simplexPanel.setMinimumSize(new Dimension(600, 500));
        simplexPanel.setPreferredSize(new Dimension(600, 500));
        final JLabel label1 = new JLabel();
        label1.setText("F.O.");
        simplexPanel.add(label1, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        foTextField = new JTextField();
        foTextField.setText("4X1 + 3X2 + 2X3 + X4");
        simplexPanel.add(foTextField, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Restrições");
        simplexPanel.add(label2, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JTabbedPane tabbedPane1 = new JTabbedPane();
        simplexPanel.add(tabbedPane1, new GridConstraints(5, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 400), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane1.addTab("Solução", panel1);
        final JLabel label3 = new JLabel();
        label3.setText("Variáveis básicas");
        panel1.add(label3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Variáveis não básicas");
        panel1.add(label4, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Valor Z");
        panel1.add(label5, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        variaveisNaoBasicastextArea = new JTextArea();
        variaveisNaoBasicastextArea.setEditable(false);
        panel1.add(variaveisNaoBasicastextArea, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        valorZTextArea = new JTextArea();
        valorZTextArea.setEditable(false);
        panel1.add(valorZTextArea, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        variaveisBasicastextArea = new JTextArea();
        variaveisBasicastextArea.setEditable(false);
        panel1.add(variaveisBasicastextArea, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        tabbedPane1.addTab("Passo-a-passo", panel2);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel2.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        passoEditorPane = new JEditorPane();
        passoEditorPane.setEditable(false);
        scrollPane1.setViewportView(passoEditorPane);
        restricoesTextArea = new JTextArea();
        restricoesTextArea.setRows(3);
        restricoesTextArea.setText(" X1 + X2  + X3  + X4 <= 120\n2X1 + X2  + 3X3 - X4 <= 260\n X1 + 2X2 + 2X3 + X4 <= 180");
        simplexPanel.add(restricoesTextArea, new GridConstraints(3, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        resolverButton = new JButton();
        resolverButton.setText("Resolver");
        simplexPanel.add(resolverButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        simplexPanel.add(spacer1, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        simplexPanel.add(spacer2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return simplexPanel;
    }
}
